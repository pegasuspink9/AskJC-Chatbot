datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int       @id @default(autoincrement())
  created_at    DateTime  @default(now())
  last_active   DateTime? 

  sessions      ChatbotSession[]
  queries       Query[]
  feedbacks     Feedback[]
}


model Query {
  id                  Int       @id @default(autoincrement())
  user_id             Int
  chatbot_session_id  Int
  query_text          String?
  users_data_inputed  String[]
  chatbot_response    String[]
  created_at          DateTime?

  user     User            @relation(fields: [user_id], references: [id])
  session  ChatbotSession  @relation(fields: [chatbot_session_id], references: [id])
  feedback Feedback[]
}

model ChatbotSession {
  id               Int       @id @default(autoincrement())
  user_id          Int
  chatbot_response String?
  response_time    DateTime?
  total_queries    Int?

  user    User    @relation(fields: [user_id], references: [id])
  queries Query[]
}

model Feedback {
  id             Int       @id @default(autoincrement())
  query_id       Int
  user_id        Int
  rating         Int?
  comment        String?
  resolved_issue Boolean?
  created_at     DateTime @default(now())

  user  User  @relation(fields: [user_id], references: [id])
  query Query @relation(fields: [query_id], references: [id])
}

model Teacher {
  id               Int     @id @default(autoincrement())
  department_id    Int
  employee_name    String?
  teachers_details String?
  office_location  String?

  department Department @relation(fields: [department_id], references: [id])
}

model Department {
  id             Int      @id @default(autoincrement())
  name           String?
  tuition_fee    Decimal?
  head_name      String?
  description    String?
  building       String?
  floor          String?
  career_path    String?
  created_at     DateTime?

  teachers Teacher[]
  courses  Course[]
  faqs     Faq[]
}

model Course {
  id            Int     @id @default(autoincrement())
  department_id Int
  name          String?
  total_course  Int?

  department Department @relation(fields: [department_id], references: [id])
}

model Faq {
  id            Int    @id @default(autoincrement())
  department_id Int
  question      String?
  answer        String?
  category      String?

  department Department       @relation(fields: [department_id], references: [id])
  keywords   QuestionKeyword[]
}

model QuestionKeyword {
  id         Int       @id @default(autoincrement())
  faq_id     Int
  keyword    String?
  created_at DateTime?

  faq Faq @relation(fields: [faq_id], references: [id])
}

model Greeting {
  id      Int    @id @default(autoincrement())
  message String?
}

model SchoolDetail {
  id              Int    @id @default(autoincrement())
  name            String?
  small_details   String?
  year_built      Int?
  history         String?
  vision          String?
  mission         String?
  address         String?
  accreditation   String?

  contacts   Contact[]
  school_faqs SchoolFaq[]
}

model Contact {
  id               Int    @id @default(autoincrement())
  school_detail_id Int
  info             String?
  website          String?
  number           String?

  school_detail SchoolDetail @relation(fields: [school_detail_id], references: [id])
}

model SchoolFaq {
  id               Int       @id @default(autoincrement())
  school_detail_id Int
  question         String?
  answer           String?
  category         String?
  priority         Int?
  view_count       Int?
  is_active        Boolean?
  created_at       DateTime?
  updated_at       DateTime?

  school_detail SchoolDetail @relation(fields: [school_detail_id], references: [id])
}
