datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int       @id @default(autoincrement())
  device_id   String?   @unique
  created_at  DateTime  @default(now())
  last_active DateTime?

  sessions  ChatbotSession[]
  queries   Query[]
  feedbacks Feedback[]
}

model Query {
  id                 Int       @id @default(autoincrement())
  user_id            Int
  chatbot_session_id Int
  query_text         String?
  users_data_inputed String[]
  chatbot_response   String[]
  created_at         DateTime?

  user     User           @relation(fields: [user_id], references: [id])
  session  ChatbotSession @relation(fields: [chatbot_session_id], references: [id])
  feedback Feedback[]
}

model ChatbotSession {
  id               Int       @id @default(autoincrement())
  user_id          Int       @unique
  chatbot_response String[]
  response_time    DateTime?
  total_queries    Int?      @default(0)

  user    User    @relation(fields: [user_id], references: [id])
  queries Query[]
}

model Feedback {
  id             Int      @id @default(autoincrement())
  query_id       Int
  user_id        Int
  rating         Int?
  comment        String?
  resolved_issue Boolean?
  created_at     DateTime @default(now())

  user  User  @relation(fields: [user_id], references: [id])
  query Query @relation(fields: [query_id], references: [id])
}

//okay na ning sa mabaw

model SchoolDetail {
  id            Int     @id @default(autoincrement())
  school_name   String?
  small_details String? @db.Text
  history       String? @db.Text
  vision        String? @db.Text
  mission       String? @db.Text
  address       String? @db.Text
  goals         String? @db.Text
  location_url  String? @db.Text
}

model Scholarship {
  id                   Int    @id @default(autoincrement())
  scholarship_name     String
  category             String
  description          String
  offeredBy            String
  eligibility_criteria String
  application_process  String
  required_document    String
  award_amount         String
  contact_office       String
}

model Office {
  id                Int     @id @default(autoincrement())
  office_name       String  @unique //Example: BURSAR
  description       String? // The Bursarâ€™s Office handles school payments, such as tuition and other fees, and assists students and parents with billing and receipts
  location_building String? //SJC Main Building
  location_floor    String? //Ground Floor
  operating_hours   String? //Mon-Friday, 8:30AM - 5:00PM and Sat, 8:30AM - 12:00PM
  contact_email     String?
  contact_phone     String? //0961 426 3942
  fb_page           String? //https://www.facebook.com/SJCteller

  officeAndFacilities_id Int?

  officeAndFacilities OfficeAndFacilities? @relation(fields: [officeAndFacilities_id], references: [id])
}

model OfficeAndFacilities {
  id          Int     @id @default(autoincrement())
  office_name String?
  office_url  String? @db.Text

  facility_name String?
  facility_url  String? @db.Text

  building    String
  room_url    String? @db.Text
  room_number String?

  map_name         String?
  map_overview_url String? @db.Text

  office Office[]
}

model StudentOrg {
  id                Int     @id @default(autoincrement())
  organization_name String
  description       String
  fb_page           String?
}

model Contact {
  id           Int     @id @default(autoincrement())
  contact_name String
  fb_page      String?
  email        String?
}

model Course {
  id          Int    @id @default(autoincrement())
  program_id  Int?
  course_code String @unique
  course_name String
  units       Int

  program Program? @relation(fields: [program_id], references: [id])
}

model Department {
  id              Int     @id @default(autoincrement())
  department_name String?
  acronym         String?
  head_name       String?
  description     String?
  building        String?
  floor           String?
  career_path     String?

  program Program[]
}

model Program {
  id            Int     @id @default(autoincrement())
  department_id Int?
  program_type  String
  program_name  String
  acronym       String?
  tuition_fee   String?

  department Department? @relation(fields: [department_id], references: [id])
  courses    Course[]
}

model SchoolOfficial {
  id            Int      @id @default(autoincrement())
  official_name String
  title         String?
  department    String?
  category      String
  created_at    DateTime @default(now())
}

model EnrollmentAndNavigation {
  id                 Int    @id @default(autoincrement())
  enrollment_process String @db.Text
  navigation         String @db.Text
}
