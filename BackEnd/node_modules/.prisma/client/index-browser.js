
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  device_id: 'device_id',
  created_at: 'created_at',
  last_active: 'last_active'
};

exports.Prisma.QueryScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  chatbot_session_id: 'chatbot_session_id',
  query_text: 'query_text',
  users_data_inputed: 'users_data_inputed',
  chatbot_response: 'chatbot_response',
  created_at: 'created_at'
};

exports.Prisma.ChatbotSessionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  chatbot_response: 'chatbot_response',
  response_time: 'response_time',
  total_queries: 'total_queries'
};

exports.Prisma.FeedbackScalarFieldEnum = {
  id: 'id',
  query_id: 'query_id',
  user_id: 'user_id',
  rating: 'rating',
  comment: 'comment',
  resolved_issue: 'resolved_issue',
  created_at: 'created_at'
};

exports.Prisma.GreetingScalarFieldEnum = {
  id: 'id',
  message: 'message'
};

exports.Prisma.SchoolDetailScalarFieldEnum = {
  id: 'id',
  name: 'name',
  small_details: 'small_details',
  year_built: 'year_built',
  history: 'history',
  vision: 'vision',
  mission: 'mission',
  address: 'address',
  accreditation: 'accreditation'
};

exports.Prisma.SchoolFaqScalarFieldEnum = {
  id: 'id',
  school_detail_id: 'school_detail_id',
  question: 'question',
  answer: 'answer',
  category: 'category',
  priority: 'priority',
  view_count: 'view_count',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.FaqScalarFieldEnum = {
  id: 'id',
  department_id: 'department_id',
  question: 'question',
  answer: 'answer',
  category: 'category'
};

exports.Prisma.QuestionKeywordScalarFieldEnum = {
  id: 'id',
  faq_id: 'faq_id',
  keyword: 'keyword',
  created_at: 'created_at'
};

exports.Prisma.ScholarshipScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  description: 'description',
  offeredBy: 'offeredBy',
  eligibility_criteria: 'eligibility_criteria',
  application_process: 'application_process',
  required_document: 'required_document',
  award_amount: 'award_amount',
  contact_office: 'contact_office'
};

exports.Prisma.OfficeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  location_building: 'location_building',
  location_floor: 'location_floor',
  operating_hours: 'operating_hours',
  contact_email: 'contact_email',
  contact_phone: 'contact_phone',
  fb_page: 'fb_page'
};

exports.Prisma.StudentOrgScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  fb_page: 'fb_page'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  name: 'name',
  fb_page: 'fb_page',
  email: 'email'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  program_id: 'program_id',
  course_code: 'course_code',
  course_name: 'course_name',
  units: 'units'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  acronym: 'acronym',
  head_name: 'head_name',
  description: 'description',
  building: 'building',
  floor: 'floor',
  career_path: 'career_path'
};

exports.Prisma.ProgramScalarFieldEnum = {
  id: 'id',
  department_id: 'department_id',
  program_type: 'program_type',
  program: 'program',
  acronym: 'acronym',
  tuition_fee: 'tuition_fee'
};

exports.Prisma.SchoolOfficialScalarFieldEnum = {
  id: 'id',
  name: 'name',
  title: 'title',
  department: 'department',
  category: 'category',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ProgramType = exports.$Enums.ProgramType = {
  undergraduate: 'undergraduate',
  graduate: 'graduate',
  seniorhighschool: 'seniorhighschool',
  other: 'other'
};

exports.Prisma.ModelName = {
  User: 'User',
  Query: 'Query',
  ChatbotSession: 'ChatbotSession',
  Feedback: 'Feedback',
  Greeting: 'Greeting',
  SchoolDetail: 'SchoolDetail',
  SchoolFaq: 'SchoolFaq',
  Faq: 'Faq',
  QuestionKeyword: 'QuestionKeyword',
  Scholarship: 'Scholarship',
  Office: 'Office',
  StudentOrg: 'StudentOrg',
  Contact: 'Contact',
  Course: 'Course',
  Department: 'Department',
  Program: 'Program',
  SchoolOfficial: 'SchoolOfficial'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
