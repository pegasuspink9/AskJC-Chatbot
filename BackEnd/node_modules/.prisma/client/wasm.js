
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  last_active: 'last_active',
  device_id: 'device_id'
};

exports.Prisma.QueryScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  chatbot_session_id: 'chatbot_session_id',
  query_text: 'query_text',
  users_data_inputed: 'users_data_inputed',
  chatbot_response: 'chatbot_response',
  created_at: 'created_at'
};

exports.Prisma.ChatbotSessionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  response_time: 'response_time',
  total_queries: 'total_queries',
  chatbot_response: 'chatbot_response'
};

exports.Prisma.FeedbackScalarFieldEnum = {
  id: 'id',
  query_id: 'query_id',
  user_id: 'user_id',
  rating: 'rating',
  comment: 'comment',
  resolved_issue: 'resolved_issue',
  created_at: 'created_at'
};

exports.Prisma.SchoolDetailScalarFieldEnum = {
  id: 'id',
  small_details: 'small_details',
  history: 'history',
  vision: 'vision',
  mission: 'mission',
  address: 'address',
  goals: 'goals',
  school_name: 'school_name',
  location_url: 'location_url'
};

exports.Prisma.ScholarshipScalarFieldEnum = {
  id: 'id',
  description: 'description',
  offeredBy: 'offeredBy',
  eligibility_criteria: 'eligibility_criteria',
  application_process: 'application_process',
  required_document: 'required_document',
  award_amount: 'award_amount',
  contact_office: 'contact_office',
  category: 'category',
  scholarship_name: 'scholarship_name'
};

exports.Prisma.OfficeScalarFieldEnum = {
  id: 'id',
  description: 'description',
  location_building: 'location_building',
  location_floor: 'location_floor',
  operating_hours: 'operating_hours',
  contact_email: 'contact_email',
  contact_phone: 'contact_phone',
  fb_page: 'fb_page',
  office_name: 'office_name',
  map_url: 'map_url',
  office_url: 'office_url'
};

exports.Prisma.OfficeAndFacilitiesScalarFieldEnum = {
  id: 'id',
  office_name: 'office_name',
  building: 'building',
  room_number: 'room_number',
  map_overview_url: 'map_overview_url',
  map_name: 'map_name',
  facility_name: 'facility_name',
  facility_url: 'facility_url',
  office_url: 'office_url',
  room_url: 'room_url'
};

exports.Prisma.StudentOrgScalarFieldEnum = {
  id: 'id',
  description: 'description',
  fb_page: 'fb_page',
  organization_name: 'organization_name'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  email: 'email',
  fb_page: 'fb_page',
  contact_name: 'contact_name'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  course_code: 'course_code',
  course_name: 'course_name',
  program_id: 'program_id',
  units: 'units',
  semester: 'semester',
  year_level: 'year_level'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  head_name: 'head_name',
  description: 'description',
  building: 'building',
  floor: 'floor',
  career_path: 'career_path',
  acronym: 'acronym',
  department_name: 'department_name'
};

exports.Prisma.ProgramScalarFieldEnum = {
  id: 'id',
  department_id: 'department_id',
  tuition_fee: 'tuition_fee',
  acronym: 'acronym',
  program_name: 'program_name',
  program_type: 'program_type'
};

exports.Prisma.SchoolOfficialScalarFieldEnum = {
  id: 'id',
  title: 'title',
  department: 'department',
  category: 'category',
  created_at: 'created_at',
  official_name: 'official_name'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  id: 'id',
  enrollment_process: 'enrollment_process',
  enrollment_documents: 'enrollment_documents',
  department_to_enroll: 'department_to_enroll'
};

exports.Prisma.NavigationScalarFieldEnum = {
  id: 'id',
  nav_button: 'nav_button',
  action: 'action',
  notes: 'notes',
  dropdown_menu: 'dropdown_menu',
  link: 'link'
};

exports.Prisma.DevInfoScalarFieldEnum = {
  id: 'id',
  dev_name: 'dev_name',
  role: 'role',
  description: 'description',
  image_url: 'image_url'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Query: 'Query',
  ChatbotSession: 'ChatbotSession',
  Feedback: 'Feedback',
  SchoolDetail: 'SchoolDetail',
  Scholarship: 'Scholarship',
  Office: 'Office',
  OfficeAndFacilities: 'OfficeAndFacilities',
  StudentOrg: 'StudentOrg',
  Contact: 'Contact',
  Course: 'Course',
  Department: 'Department',
  Program: 'Program',
  SchoolOfficial: 'SchoolOfficial',
  Enrollment: 'Enrollment',
  Navigation: 'Navigation',
  DevInfo: 'DevInfo'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\AskJC-Chatbot\\BackEnd\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\AskJC-Chatbot\\BackEnd\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id          Int             @id @default(autoincrement())\n  created_at  DateTime        @default(now())\n  last_active DateTime?\n  device_id   String?         @unique\n  sessions    ChatbotSession?\n  feedbacks   Feedback[]\n  queries     Query[]\n}\n\nmodel Query {\n  id                 Int            @id @default(autoincrement())\n  user_id            Int\n  chatbot_session_id Int\n  query_text         String?\n  users_data_inputed String[]\n  chatbot_response   String[]\n  created_at         DateTime?\n  feedback           Feedback[]\n  session            ChatbotSession @relation(fields: [chatbot_session_id], references: [id])\n  user               User           @relation(fields: [user_id], references: [id])\n}\n\nmodel ChatbotSession {\n  id               Int       @id @default(autoincrement())\n  user_id          Int       @unique\n  response_time    DateTime?\n  total_queries    Int?      @default(0)\n  chatbot_response String[]\n  user             User      @relation(fields: [user_id], references: [id])\n  queries          Query[]\n}\n\nmodel Feedback {\n  id             Int      @id @default(autoincrement())\n  query_id       Int\n  user_id        Int\n  rating         Int?\n  comment        String?\n  resolved_issue Boolean?\n  created_at     DateTime @default(now())\n  query          Query    @relation(fields: [query_id], references: [id])\n  user           User     @relation(fields: [user_id], references: [id])\n}\n\nmodel SchoolDetail {\n  id            Int     @id @default(autoincrement())\n  small_details String?\n  history       String?\n  vision        String?\n  mission       String?\n  address       String?\n  goals         String?\n  school_name   String?\n  location_url  String?\n}\n\nmodel Scholarship {\n  id                   Int    @id @default(autoincrement())\n  description          String\n  offeredBy            String\n  eligibility_criteria String\n  application_process  String\n  required_document    String\n  award_amount         String\n  contact_office       String\n  category             String\n  scholarship_name     String\n}\n\nmodel Office {\n  id                Int     @id @default(autoincrement())\n  description       String?\n  location_building String?\n  location_floor    String?\n  operating_hours   String?\n  contact_email     String?\n  contact_phone     String?\n  fb_page           String?\n  office_name       String  @unique\n  map_url           String?\n  office_url        String?\n}\n\nmodel OfficeAndFacilities {\n  id               Int     @id @default(autoincrement())\n  office_name      String?\n  building         String\n  room_number      String?\n  map_overview_url String?\n  map_name         String?\n  facility_name    String?\n  facility_url     String?\n  office_url       String?\n  room_url         String?\n}\n\nmodel StudentOrg {\n  id                Int     @id @default(autoincrement())\n  description       String\n  fb_page           String?\n  organization_name String\n}\n\nmodel Contact {\n  id           Int     @id @default(autoincrement())\n  email        String?\n  fb_page      String?\n  contact_name String\n}\n\nmodel Course {\n  id          Int      @id @default(autoincrement())\n  course_code String?\n  course_name String\n  program_id  Int?\n  units       Int?\n  semester    String?\n  year_level  String?\n  program     Program? @relation(fields: [program_id], references: [id])\n}\n\nmodel Department {\n  id              Int       @id @default(autoincrement())\n  head_name       String?\n  description     String?\n  building        String?\n  floor           String?\n  career_path     String?\n  acronym         String?\n  department_name String?\n  program         Program[]\n}\n\nmodel Program {\n  id            Int         @id @default(autoincrement())\n  department_id Int?\n  tuition_fee   String?\n  acronym       String?\n  program_name  String\n  program_type  String\n  courses       Course[]\n  department    Department? @relation(fields: [department_id], references: [id])\n}\n\nmodel SchoolOfficial {\n  id            Int      @id @default(autoincrement())\n  title         String?\n  department    String?\n  category      String\n  created_at    DateTime @default(now())\n  official_name String\n}\n\nmodel Enrollment {\n  id                   Int    @id @default(autoincrement())\n  enrollment_process   String\n  enrollment_documents String\n  department_to_enroll String\n}\n\nmodel Navigation {\n  id            Int     @id @default(autoincrement())\n  nav_button    String\n  action        String\n  notes         String\n  dropdown_menu String\n  link          String?\n}\n\nmodel DevInfo {\n  id          Int     @id @default(autoincrement())\n  dev_name    String\n  role        String\n  description String?\n  image_url   String?\n}\n",
  "inlineSchemaHash": "7f54e4dec1a16ae30362e07446cf5789aa2dc8beb36a51cdbe73f01d2f4c3e09",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"last_active\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"ChatbotSession\",\"relationName\":\"ChatbotSessionToUser\"},{\"name\":\"feedbacks\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"FeedbackToUser\"},{\"name\":\"queries\",\"kind\":\"object\",\"type\":\"Query\",\"relationName\":\"QueryToUser\"}],\"dbName\":null},\"Query\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chatbot_session_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"query_text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users_data_inputed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatbot_response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"feedback\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"FeedbackToQuery\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"ChatbotSession\",\"relationName\":\"ChatbotSessionToQuery\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QueryToUser\"}],\"dbName\":null},\"ChatbotSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"response_time\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"total_queries\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chatbot_response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ChatbotSessionToUser\"},{\"name\":\"queries\",\"kind\":\"object\",\"type\":\"Query\",\"relationName\":\"ChatbotSessionToQuery\"}],\"dbName\":null},\"Feedback\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"query_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolved_issue\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"query\",\"kind\":\"object\",\"type\":\"Query\",\"relationName\":\"FeedbackToQuery\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FeedbackToUser\"}],\"dbName\":null},\"SchoolDetail\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"small_details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"history\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vision\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mission\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goals\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"school_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location_url\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Scholarship\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"offeredBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eligibility_criteria\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"application_process\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"required_document\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"award_amount\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contact_office\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scholarship_name\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Office\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location_building\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location_floor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"operating_hours\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contact_email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contact_phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fb_page\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"office_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"map_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"office_url\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"OfficeAndFacilities\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"office_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"building\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"room_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"map_overview_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"map_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facility_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facility_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"office_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"room_url\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"StudentOrg\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fb_page\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization_name\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Contact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fb_page\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contact_name\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Course\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"course_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"program_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"units\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"semester\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"year_level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"program\",\"kind\":\"object\",\"type\":\"Program\",\"relationName\":\"CourseToProgram\"}],\"dbName\":null},\"Department\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"head_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"building\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"floor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"career_path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"acronym\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"program\",\"kind\":\"object\",\"type\":\"Program\",\"relationName\":\"DepartmentToProgram\"}],\"dbName\":null},\"Program\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"department_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tuition_fee\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"acronym\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"program_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"program_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToProgram\"},{\"name\":\"department\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentToProgram\"}],\"dbName\":null},\"SchoolOfficial\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"official_name\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Enrollment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enrollment_process\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enrollment_documents\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department_to_enroll\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Navigation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nav_button\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dropdown_menu\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"DevInfo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dev_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image_url\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

